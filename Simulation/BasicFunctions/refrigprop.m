function Out = refrigprop(varargin)
%If 4 inputs are given they are:
% i) species of refrigerant, ii) temperature or pressure, iii) 'T' or 'P' depending on ii, and iv) specify desired saturation property: T, P, 'Hsat_liq' or 'Hsat_vap'
%If 6 inputs are given they are: % i) species of refrigerant, ii)temperature or pressure, iii) 'T' or 'P' depending on ii, iv) Enthalpy, Entropy or Temperature, v) 'H', 'S', or 'T' according to iv, and desired output: 'V', 'H', 'S', or 'T'
%Units are: Pressure (kPa), Temperature (K), specific volume of the vapor (m^3/kg), enthalpy(kJ/kg), entropy (kJ/kg*K)
Ru = 8.314471; %Universal gas constant
% superheaed vapor equations based on Martin-Hou EOS
% %Convert to English Units
            % P_MH = P_MH*.14504;
            % H = (H-Href)*.43021;
            % S = (S-Sref)*.23901;
if length(varargin)==4
    %these saturation values are specifically for R123
    if strcmp(varargin{4},'Cp')
        cp1 = 2.89811e1;
        cp2 = 3.04711e-1;
        cp3 = -1.95477e-4;
        % Cp = cp1+cp2*T+cp3*T^2;
        switch varargin{3}
            case 'T' 
                T = varargin{2};
            case 'P'
                T = 24.788*log(varargin{2})+187.37; 
        end
        Out = cp1+cp2*T+cp3*T^2;
    else
        switch varargin{3}
            case 'T' % X = Tsat
                X = [253.1500, 253.7056, 254.2611, 254.8167, 255.3722, 255.9278, 256.4833, 257.0389, 257.5944, 258.1500, 258.7056, 259.2611, 259.8167, 260.3722, 260.9278, 261.4833, 262.0389, 262.5944, 263.1500, 263.7056, 264.2611, 264.8167, 265.3722, 265.9278, 266.4833, 267.0389, 267.5944, 268.1500, 268.7056, 269.2611, 269.8167, 270.3722, 270.9278, 271.4833, 272.0389, 272.5944, 273.1500, 273.7056, 274.2611, 274.8167, 275.3722, 275.9278, 276.4833, 277.0389, 277.5944, 278.1500, 278.7056, 279.2611, 279.8167, 280.3722, 280.9278, 281.4833, 282.0389, 282.5944, 283.1500, 283.7056, 284.2611, 284.8167, 285.3722, 285.9278, 286.4833, 287.0389, 287.5944, 288.1500, 288.7056, 289.2611, 289.8167, 290.3722, 290.9278, 291.4833, 292.0389, 292.5944, 293.1500, 293.7056, 294.2611, 294.8167, 295.3722, 295.9278, 296.4833, 297.0389, 297.5944, 298.1500, 298.7056, 299.2611, 299.8167, 300.3722, 300.9278, 301.4833, 302.0389, 302.5944, 303.1500, 303.7056, 304.2611, 304.8167, 305.3722, 305.9278, 306.4833, 307.0389, 307.5944, 308.1500, 308.7056, 309.2611, 309.8167, 310.3722, 310.9278, 311.4833, 312.0389, 312.5944, 313.1500, 313.7056, 314.2611, 314.8167, 315.3722, 315.9278, 316.4833, 317.0389, 317.5944, 318.1500, 318.7056, 319.2611, 319.8167, 320.3722, 320.9278, 321.4833, 322.0389, 322.5944, 323.15];
            case 'P' %X = Psat
                X = [12.21730, 12.58270, 12.96190, 13.34800, 13.74100, 14.14780, 14.56840, 14.98900, 15.43020, 15.87840, 16.33340, 16.80230, 17.28490, 17.77440, 18.27770, 18.79480, 19.31880, 19.85660, 20.40820, 20.97350, 21.55270, 22.14560, 22.74540, 23.36600, 23.99340, 24.64150, 25.29650, 25.97210, 26.66160, 27.36490, 28.08190, 28.81960, 29.56430, 30.33650, 31.11560, 31.91530, 32.72890, 33.56320, 34.41120, 35.27990, 36.16240, 37.06560, 37.98260, 38.92720, 39.88550, 40.86460, 41.85740, 42.87780, 43.91200, 44.96690, 46.04940, 47.14560, 48.26250, 49.40710, 50.56540, 51.75120, 52.95780, 54.19190, 55.43990, 56.71540, 58.01850, 59.34230, 60.68670, 62.05870, 63.45150, 64.87870, 66.31960, 67.79510, 69.29120, 70.82180, 72.37310, 73.95200, 75.55160, 77.18560, 78.84720, 80.54330, 82.26010, 84.00440, 85.78320, 87.58960, 89.42360, 91.29210, 93.19500, 95.11860, 97.08360, 99.06920, 101.0962, 103.1509, 105.2399, 107.3635, 109.5215, 111.7140, 113.9341, 116.1955, 118.4915, 120.8149, 123.1798, 125.5860, 128.0199, 130.4950, 133.0047, 135.5557, 138.1412, 140.7681, 143.4294, 146.1321, 148.8762, 151.6616, 154.4815, 157.3428, 160.2454, 163.1964, 166.1817, 169.2085, 172.2835, 175.3999, 178.5576, 181.7568, 185.0041, 188.2929, 191.6299, 195.0083, 198.4349, 201.9098, 205.4330, 208.9975, 212.6103];
        end
        switch varargin{4}
            case 'T'
                Y = [253.1500, 253.7056, 254.2611, 254.8167, 255.3722, 255.9278, 256.4833, 257.0389, 257.5944, 258.1500, 258.7056, 259.2611, 259.8167, 260.3722, 260.9278, 261.4833, 262.0389, 262.5944, 263.1500, 263.7056, 264.2611, 264.8167, 265.3722, 265.9278, 266.4833, 267.0389, 267.5944, 268.1500, 268.7056, 269.2611, 269.8167, 270.3722, 270.9278, 271.4833, 272.0389, 272.5944, 273.1500, 273.7056, 274.2611, 274.8167, 275.3722, 275.9278, 276.4833, 277.0389, 277.5944, 278.1500, 278.7056, 279.2611, 279.8167, 280.3722, 280.9278, 281.4833, 282.0389, 282.5944, 283.1500, 283.7056, 284.2611, 284.8167, 285.3722, 285.9278, 286.4833, 287.0389, 287.5944, 288.1500, 288.7056, 289.2611, 289.8167, 290.3722, 290.9278, 291.4833, 292.0389, 292.5944, 293.1500, 293.7056, 294.2611, 294.8167, 295.3722, 295.9278, 296.4833, 297.0389, 297.5944, 298.1500, 298.7056, 299.2611, 299.8167, 300.3722, 300.9278, 301.4833, 302.0389, 302.5944, 303.1500, 303.7056, 304.2611, 304.8167, 305.3722, 305.9278, 306.4833, 307.0389, 307.5944, 308.1500, 308.7056, 309.2611, 309.8167, 310.3722, 310.9278, 311.4833, 312.0389, 312.5944, 313.1500, 313.7056, 314.2611, 314.8167, 315.3722, 315.9278, 316.4833, 317.0389, 317.5944, 318.1500, 318.7056, 319.2611, 319.8167, 320.3722, 320.9278, 321.4833, 322.0389, 322.5944, 323.15];
            case 'P'
                Y = [12.21730, 12.58270, 12.96190, 13.34800, 13.74100, 14.14780, 14.56840, 14.98900, 15.43020, 15.87840, 16.33340, 16.80230, 17.28490, 17.77440, 18.27770, 18.79480, 19.31880, 19.85660, 20.40820, 20.97350, 21.55270, 22.14560, 22.74540, 23.36600, 23.99340, 24.64150, 25.29650, 25.97210, 26.66160, 27.36490, 28.08190, 28.81960, 29.56430, 30.33650, 31.11560, 31.91530, 32.72890, 33.56320, 34.41120, 35.27990, 36.16240, 37.06560, 37.98260, 38.92720, 39.88550, 40.86460, 41.85740, 42.87780, 43.91200, 44.96690, 46.04940, 47.14560, 48.26250, 49.40710, 50.56540, 51.75120, 52.95780, 54.19190, 55.43990, 56.71540, 58.01850, 59.34230, 60.68670, 62.05870, 63.45150, 64.87870, 66.31960, 67.79510, 69.29120, 70.82180, 72.37310, 73.95200, 75.55160, 77.18560, 78.84720, 80.54330, 82.26010, 84.00440, 85.78320, 87.58960, 89.42360, 91.29210, 93.19500, 95.11860, 97.08360, 99.06920, 101.0962, 103.1509, 105.2399, 107.3635, 109.5215, 111.7140, 113.9341, 116.1955, 118.4915, 120.8149, 123.1798, 125.5860, 128.0199, 130.4950, 133.0047, 135.5557, 138.1412, 140.7681, 143.4294, 146.1321, 148.8762, 151.6616, 154.4815, 157.3428, 160.2454, 163.1964, 166.1817, 169.2085, 172.2835, 175.3999, 178.5576, 181.7568, 185.0041, 188.2929, 191.6299, 195.0083, 198.4349, 201.9098, 205.4330, 208.9975, 212.6103]; 
            case 'Hsat_liq'
                Y = [183.2387, 183.7036, 184.1685, 184.6333, 185.0982, 185.5631, 186.0280, 186.4929, 186.9578, 187.4227, 187.8876, 188.3525, 188.8173, 189.0498, 189.5147, 189.9796, 190.4445, 190.9094, 191.3742, 191.8391, 192.3040, 192.7689, 193.2338, 193.6987, 194.1636, 194.6285, 195.0934, 195.5582, 196.0231, 196.4880, 197.1854, 197.6502, 198.1151, 198.5800, 199.0449, 199.5098, 199.9747, 200.4396, 200.9045, 201.3694, 201.8342, 202.2991, 202.9965, 203.4614, 203.9263, 204.3911, 204.8560, 205.3209, 206.0183, 206.4831, 206.9480, 207.4129, 207.8778, 208.3427, 209.0400, 209.5049, 209.9698, 210.4347, 211.1320, 211.5969, 212.0618, 212.5267, 213.2240, 213.6889, 214.1538, 214.6187, 215.3160, 215.7809, 216.2458, 216.9431, 217.4080, 217.8729, 218.3378, 219.0352, 219.5000, 219.9649, 220.6623, 221.1272, 221.5920, 222.2894, 222.7543, 223.4516, 223.9165, 224.3814, 225.0787, 225.5436, 226.0085, 226.7058, 227.1707, 227.8680, 228.3329, 229.0303, 229.4952, 229.9600, 230.6574, 231.1223, 231.8196, 232.2845, 232.9818, 233.4467, 233.9116, 234.6089, 235.0738, 235.7712, 236.2361, 236.9334, 237.3983, 238.0956, 238.5605, 239.2578, 239.7227, 240.4201, 240.8849, 241.5823, 242.0472, 242.7445, 243.2094, 243.9067, 244.3716, 245.0689, 245.5338, 246.2312, 246.9285, 247.3934, 248.0907, 248.5556, 249.2530];
            case 'Hsat_vap'
                Y = [367.7997, 368.2646, 368.4970, 368.7295, 369.1944, 369.4268, 369.8917, 370.1242, 370.3566, 370.8215, 371.0539, 371.5188, 371.7513, 371.9837, 372.4486, 372.6810, 373.1459, 373.3784, 373.8433, 374.0757, 374.3082, 374.7730, 375.0055, 375.4704, 375.7028, 375.9353, 376.4002, 376.6326, 377.0975, 377.3299, 377.7948, 378.0273, 378.2597, 378.7246, 378.9570, 379.4219, 379.6544, 380.1193, 380.3517, 380.8166, 381.0491, 381.2815, 381.7464, 381.9788, 382.4437, 382.6762, 383.1411, 383.3735, 383.8384, 384.0708, 384.3033, 384.7682, 385.0006, 385.4655, 385.6979, 386.1628, 386.3953, 386.8602, 387.0926, 387.3251, 387.7899, 388.0224, 388.4873, 388.7197, 389.1846, 389.4171, 389.8819, 390.1144, 390.5793, 390.8117, 391.0442, 391.5091, 391.7415, 392.2064, 392.4388, 392.9037, 393.1362, 393.6011, 393.8335, 394.2984, 394.5308, 394.9957, 395.2282, 395.4606, 395.9255, 396.1580, 396.6228, 396.8553, 397.3202, 397.5526, 398.0175, 398.2500, 398.7148, 398.9473, 399.4122, 399.6446, 399.8771, 400.3420, 400.5744, 401.0393, 401.2717, 401.7366, 401.9691, 402.4340, 402.6664, 403.1313, 403.3637, 403.8286, 404.0611, 404.2935, 404.7584, 404.9908, 405.4557, 405.6882, 406.1531, 406.3855, 406.8504, 407.0828, 407.5477, 407.7802, 408.0126, 408.4775, 408.7100, 409.1748, 409.4073, 409.8722, 410.1046];
            case 'Ssat_vap'
                Y = [1.665900, 1.665400, 1.665000, 1.664600, 1.664600, 1.664200, 1.663800, 1.663800, 1.663400, 1.662900, 1.662900, 1.662500, 1.662500, 1.662100, 1.662100, 1.661700, 1.661300, 1.661300, 1.660800, 1.660800, 1.660400, 1.660400, 1.660400, 1.660000, 1.660000, 1.659600, 1.659600, 1.659200, 1.659200, 1.659200, 1.658800, 1.658800, 1.658800, 1.658300, 1.658300, 1.658300, 1.657900, 1.657900, 1.657900, 1.657900, 1.657500, 1.657500, 1.657500, 1.657500, 1.657500, 1.657100, 1.657100, 1.657100, 1.657100, 1.657100, 1.657100, 1.656700, 1.656700, 1.656700, 1.656700, 1.656700, 1.656700, 1.656700, 1.656700, 1.656700, 1.656700, 1.656700, 1.656700, 1.656700, 1.656700, 1.656700, 1.656700, 1.656700, 1.656700, 1.656700, 1.656700, 1.656700, 1.656700, 1.656700, 1.656700, 1.656700, 1.656700, 1.656700, 1.657100, 1.657100, 1.657100, 1.657100, 1.657100, 1.657100, 1.657100, 1.657500, 1.657500, 1.657500, 1.657500, 1.657500, 1.657900, 1.657900, 1.657900, 1.657900, 1.658300, 1.658300, 1.658300, 1.658300, 1.658800, 1.658800, 1.658800, 1.658800, 1.659200, 1.659200, 1.659200, 1.659600, 1.659600, 1.659600, 1.660000, 1.660000, 1.660000, 1.660400, 1.660400, 1.660400, 1.660800, 1.660800, 1.661300, 1.661300, 1.661300, 1.661700, 1.661700, 1.661700, 1.662100, 1.662100, 1.662500, 1.662500, 1.6629];
        end
        Out = interp1(X,Y,varargin{2});
    end
else
    switch varargin{1}
        case 'R123'
            MW = 152.93; % Molecular weight
            R = Ru/MW; % Gas Constant kJ/kg*K
            Tc = 456.83; %Critical Temperature (K)
            Sfg = .6577; %kJ/kg*K
            Hfg = 179.6797;%kJ/kg
            %% % Martin-Hou Equation of State
            A(2) = -1.770068e-1;
            A(3) = 5.579420e-4;
            A(4) = -9.077682e-7;
            A(5) = 4.174049e-10;
            B(2) = 2.384783e-4;
            B(3) = -1.030148e-6;
            B(4) = 1.955524e-9;
            B(5) = -1.035972e-12;
            C(2) = -1.145981e3;
            C(3) = -4.535924e0;
            C(4) = -6.012000e-1;
            C(5) = 1.110889e-3;
            b_mh = 4.628100e-4;
            k_mh = 17.5;
            % P = R*T/(V-b)+(A2+B2*T+C2*exp(-k_mh*T/Tc))/((V-b)^2)+(A3+B3*T+C3*exp(-k_mh*T/Tc))/((V-b)^2)+(A4+B4*T+C4*exp(-k_mh*T/Tc))/((V-b)^2)+(A5+B5*T+C5*exp(-k_mh*T/Tc))/((V-b)^2);
            Uref = 1066.36 - 13.2;
            Sref = 24.8548 + 4.7913e-2;
            %% Specific Heat
            cv1 = -5.397695e0;
            cv2 = 3.275570e-2;
            cv3 = -6.358090e-5;
            cv4 = 4.34077e-8;
            cv5 = 6.622145e4;
            % Cv = cv1+cv2*T+cv3*T^2+cv4*T^3+cv5/T^2;       
    end
    switch varargin{3}
        case 'P'
            P = varargin{2};
            Out.P = P;
            %need to revise this for other species (see excel file for curve fit)
            Tsat = 24.788*log(P)+187.37; 
            Vsat = 12850.87*exp(-.03765*Tsat); %
            Hsat = 0.6079*Tsat + 213.63;
            Ssat = 6.0992e-6*Tsat.^2 - 3.5262e-3*Tsat + 2.1662;
            switch varargin{5}
                case 'T'
                    T = varargin{4};
                    Out.T = T;
                    if T<=Tsat
                        Out.V = Vsat;
                        Out.H = Hsat;
                        Out.S = Ssat;
                    else
                        %Specific Volume
                        V = Vsat;
                        error = 1;
                        while abs(error)>.0001
                            P_MH = R*T/(V-b_mh)+(A(2)+B(2)*T+C(2)*exp(-k_mh*T/Tc))/((V-b_mh)^2)+(A(3)+B(3)*T+C(3)*exp(-k_mh*T/Tc))/((V-b_mh)^3)+(A(4)+B(4)*T+C(4)*exp(-k_mh*T/Tc))/((V-b_mh)^4)+(A(5)+B(5)*T+C(5)*exp(-k_mh*T/Tc))/((V-b_mh)^5);
                            error = (P_MH-P)/P;
                            V = V*(1+error);
                        end
                        Out.V = V;
                        % Internal Energy
                        U0 = (cv1*T+cv2*T^2/2+cv3*T^3/3+cv4*T^4/4-cv5/T)+Uref;
                        %Enthalpy:
                        dAdv = zeros(4,1);
                        for i = 2:5
                            dAdv(i-1) = (A(i)+(1+k_mh*T/Tc)*C(i)*exp(-k_mh*T/Tc))/((i-1)*V^(i-1));
                        end
                        H = P_MH*V+sum(dAdv)+U0+Hfg;
                        %Entropy:
                        S0 = (cv1*log(T)+cv2*T+cv3*T^2/2+cv4*T^3/3-cv5/(2*T^2)) + Sref;
                        for i = 2:5
                            dAdv(i) = (-B(i)+(k_mh/Tc)*C(i)*exp(-k_mh*T/Tc))/((i-1)*V^(i-1));
                        end
                        S = R*log(V)+sum(dAdv)+S0+Sfg;   
                    end
                case 'H'
                    H = varargin{4};
                    if H<=Hsat
                        T = Tsat;
                        V = Vsat;
                        S = Ssat;
                    else
                        T = Tsat;
                        V = Vsat;
                        error = 1;
                        dAdv = zeros(4,1);
                        while abs(error)>.0001
                            error2 = 1;
                            while abs(error2)>.0001
                                %Enthalpy:
                                U0 = (cv1*T+cv2*T^2/2+cv3*T^3/3+cv4*T^4/4-cv5/T)+Uref;
                                for i = 2:5
                                    dAdv(i-1) = (A(i)+(1+k_mh*T/Tc)*C(i)*exp(-k_mh*T/Tc))/((i-1)*V^(i-1));
                                end
                                P_MH = R*T/(V-b_mh)+(A(2)+B(2)*T+C(2)*exp(-k_mh*T/Tc))/((V-b_mh)^2)+(A(3)+B(3)*T+C(3)*exp(-k_mh*T/Tc))/((V-b_mh)^3)+(A(4)+B(4)*T+C(4)*exp(-k_mh*T/Tc))/((V-b_mh)^4)+(A(5)+B(5)*T+C(5)*exp(-k_mh*T/Tc))/((V-b_mh)^5);
                                Hnew = P_MH*V+sum(dAdv)+U0+Hfg;
                                error2 = (Hnew-H)/H;
                                T = T*(1-error2);
                            end
                            
                            error = (P_MH-P)/P;
                            V = V*(1+error);
                        end
                        %Entropy:
                        S0 = (cv1*log(T)+cv2*T+cv3*T^2/2+cv4*T^3/3-cv5/(2*T^2)) + Sref;
                        for i = 2:5
                            dAdv(i-1) = (-B(i)+(k_mh/Tc)*C(i)*exp(-k_mh*T/Tc))/((i-1)*V^(i-1));
                        end
                        S = R*log(V)+sum(dAdv)+S0+Sfg;
                    end
                case 'S'
                    S = varargin{4};
                    if S<=Ssat
                        T = Tsat;
                        V = Vsat;
                        H = Hsat;
                    else
                        T = Tsat;
                        V = Vsat;
                        error = 1;
                        dAdv = zeros(4,1);
                        while abs(error)>.0001
                            error2 = 1;
                            while abs(error2)>.001
                                %Entropy:
                                S0 = (cv1*log(T)+cv2*T+cv3*T^2/2+cv4*T^3/3-cv5/(2*T^2)) + Sref;
                                for i = 2:5
                                    dAdv(i-1) = (-B(i)+(k_mh/Tc)*C(i)*exp(-k_mh*T/Tc))/((i-1)*V^(i-1));
                                end
                                Snew = R*log(V)+sum(dAdv)+S0+Sfg;
                                error2 = (Snew-S)/S;
                                T = T*(1-error2);
                            end
                            P_MH = R*T/(V-b_mh)+(A(2)+B(2)*T+C(2)*exp(-k_mh*T/Tc))/((V-b_mh)^2)+(A(3)+B(3)*T+C(3)*exp(-k_mh*T/Tc))/((V-b_mh)^3)+(A(4)+B(4)*T+C(4)*exp(-k_mh*T/Tc))/((V-b_mh)^4)+(A(5)+B(5)*T+C(5)*exp(-k_mh*T/Tc))/((V-b_mh)^5);
                            error = (P_MH-P)/P;
                            V = V*(1+error);
                        end
                        %Enthalpy:
                        U0 = (cv1*T+cv2*T^2/2+cv3*T^3/3+cv4*T^4/4-cv5/T)+Uref;
                        for i = 2:5
                            dAdv(i-1) = (A(i)+(1+k_mh*T/Tc)*C(i)*exp(-k_mh*T/Tc))/((i-1)*V^(i-1));
                        end
                        H = P_MH*V+sum(dAdv)+U0+Hfg;
                    end
            end
    end
    switch varargin{6}
        case 'V'
            Out = V;
        case 'H'
            Out = H;
        case 'T'
            Out = T;
        case 'S'
            Out = S;
    end
end